# Generated by Django 5.2.6 on 2025-09-10 15:10

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentSyncQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stale_after_ms', models.IntegerField(default=604800000)),
                ('next_sync_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_synced_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'document_sync_queues',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('pfp_filename', models.CharField(blank=True, max_length=255, null=True)),
                ('role', models.CharField(default='default', max_length=50)),
                ('suspended', models.IntegerField(default=0)),
                ('seen_recovery_codes', models.BooleanField(default=False)),
                ('daily_message_limit', models.IntegerField(blank=True, null=True)),
                ('bio', models.TextField(default='')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ApiKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'api_keys',
            },
        ),
        migrations.CreateModel(
            name='BrowserExtensionApiKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='browser_extension_api_keys', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'browser_extension_api_keys',
            },
        ),
        migrations.CreateModel(
            name='CacheData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('data', models.TextField()),
                ('belongs_to', models.CharField(blank=True, max_length=255, null=True)),
                ('by_id', models.IntegerField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_updated_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'cache_data',
                'indexes': [models.Index(fields=['name'], name='cache_data_name_297017_idx'), models.Index(fields=['belongs_to'], name='cache_data_belongs_7b1e97_idx'), models.Index(fields=['by_id'], name='cache_data_by_id_223b5f_idx'), models.Index(fields=['expires_at'], name='cache_data_expires_d5e361_idx')],
            },
        ),
        migrations.CreateModel(
            name='DesktopMobileDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_os', models.CharField(max_length=255)),
                ('device_name', models.CharField(max_length=255)),
                ('token', models.CharField(max_length=255, unique=True)),
                ('approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='desktop_mobile_devices', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'desktop_mobile_devices',
            },
        ),
        migrations.CreateModel(
            name='DocumentSyncExecution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(default='unknown', max_length=50)),
                ('result', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('queue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='runs', to='coredb.documentsyncqueue')),
            ],
            options={
                'db_table': 'document_sync_executions',
            },
        ),
        migrations.CreateModel(
            name='DocumentVector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc_id', models.CharField(max_length=255)),
                ('vector_id', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_updated_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'document_vectors',
                'indexes': [models.Index(fields=['doc_id'], name='document_ve_doc_id_dbae8e_idx'), models.Index(fields=['vector_id'], name='document_ve_vector__27f121_idx')],
            },
        ),
        migrations.CreateModel(
            name='EmbedConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=255, unique=True)),
                ('enabled', models.BooleanField(default=False)),
                ('chat_mode', models.CharField(default='query', max_length=50)),
                ('allowlist_domains', models.TextField(blank=True, null=True)),
                ('allow_model_override', models.BooleanField(default=False)),
                ('allow_temperature_override', models.BooleanField(default=False)),
                ('allow_prompt_override', models.BooleanField(default=False)),
                ('max_chats_per_day', models.IntegerField(blank=True, null=True)),
                ('max_chats_per_session', models.IntegerField(blank=True, null=True)),
                ('message_limit', models.IntegerField(default=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='embed_configs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'embed_configs',
            },
        ),
        migrations.CreateModel(
            name='EmbedChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prompt', models.TextField()),
                ('response', models.TextField()),
                ('session_id', models.CharField(max_length=255)),
                ('include', models.BooleanField(default=True)),
                ('connection_information', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='embed_chats', to=settings.AUTH_USER_MODEL)),
                ('embed_config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='embed_chats', to='coredb.embedconfig')),
            ],
            options={
                'db_table': 'embed_chats',
            },
        ),
        migrations.CreateModel(
            name='EventLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.CharField(max_length=255)),
                ('metadata', models.TextField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('occurred_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'event_logs',
                'indexes': [models.Index(fields=['event'], name='event_logs_event_727da5_idx'), models.Index(fields=['user_id'], name='event_logs_user_id_076f7a_idx'), models.Index(fields=['occurred_at'], name='event_logs_occurre_8a417d_idx')],
            },
        ),
        migrations.CreateModel(
            name='Invite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=255, unique=True)),
                ('status', models.CharField(default='pending', max_length=50)),
                ('workspace_ids', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('claimed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_invites', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'invites',
            },
        ),
        migrations.CreateModel(
            name='PasswordResetToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=255, unique=True)),
                ('expires_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='password_reset_tokens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'password_reset_tokens',
            },
        ),
        migrations.CreateModel(
            name='RecoveryCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_hash', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recovery_codes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'recovery_codes',
            },
        ),
        migrations.CreateModel(
            name='SlashCommandPreset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('command', models.CharField(max_length=255)),
                ('prompt', models.TextField()),
                ('description', models.TextField()),
                ('uid', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='slash_command_presets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'slash_command_presets',
            },
        ),
        migrations.CreateModel(
            name='SystemPromptVariable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255, unique=True)),
                ('value', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('type', models.CharField(default='system', max_length=50)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='system_prompt_variables', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'system_prompt_variables',
            },
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, unique=True)),
                ('value', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_updated_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'system_settings',
                'indexes': [models.Index(fields=['label'], name='system_sett_label_8a59bf_idx')],
            },
        ),
        migrations.CreateModel(
            name='TemporaryAuthToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=255, unique=True)),
                ('expires_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='temporary_auth_tokens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'temporary_auth_tokens',
            },
        ),
        migrations.CreateModel(
            name='WelcomeMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=255)),
                ('response', models.TextField()),
                ('order_index', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'welcome_messages',
                'indexes': [models.Index(fields=['user'], name='welcome_mes_user_aa2262_idx'), models.Index(fields=['order_index'], name='welcome_mes_order_i_3a02a3_idx')],
            },
        ),
        migrations.CreateModel(
            name='Workspace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.CharField(max_length=255, unique=True)),
                ('vector_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('openai_temp', models.FloatField(blank=True, null=True)),
                ('openai_history', models.IntegerField(default=20)),
                ('last_updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('openai_prompt', models.TextField(blank=True, null=True)),
                ('similarity_threshold', models.FloatField(default=0.25)),
                ('chat_provider', models.CharField(blank=True, max_length=255, null=True)),
                ('chat_model', models.CharField(blank=True, max_length=255, null=True)),
                ('top_n', models.IntegerField(default=4)),
                ('chat_mode', models.CharField(default='chat', max_length=50)),
                ('pfp_filename', models.CharField(blank=True, max_length=255, null=True)),
                ('agent_provider', models.CharField(blank=True, max_length=255, null=True)),
                ('agent_model', models.CharField(blank=True, max_length=255, null=True)),
                ('query_refusal_response', models.TextField(blank=True, null=True)),
                ('vector_search_mode', models.CharField(default='default', max_length=50)),
            ],
            options={
                'db_table': 'workspaces',
                'indexes': [models.Index(fields=['slug'], name='workspaces_slug_cac896_idx'), models.Index(fields=['created_at'], name='workspaces_created_05cfe1_idx')],
            },
        ),
        migrations.CreateModel(
            name='PromptHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prompt', models.TextField()),
                ('modified_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prompt_history', to=settings.AUTH_USER_MODEL)),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prompt_history', to='coredb.workspace')),
            ],
            options={
                'db_table': 'prompt_history',
            },
        ),
        migrations.AddField(
            model_name='embedconfig',
            name='workspace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='embed_configs', to='coredb.workspace'),
        ),
        migrations.CreateModel(
            name='WorkspaceAgentInvocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=255, unique=True)),
                ('prompt', models.TextField()),
                ('closed', models.BooleanField(default=False)),
                ('thread_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workspace_agent_invocations', to=settings.AUTH_USER_MODEL)),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agent_invocations', to='coredb.workspace')),
            ],
            options={
                'db_table': 'workspace_agent_invocations',
            },
        ),
        migrations.CreateModel(
            name='WorkspaceChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prompt', models.TextField()),
                ('response', models.TextField()),
                ('include', models.BooleanField(default=True)),
                ('thread_id', models.IntegerField(blank=True, null=True)),
                ('api_session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('feedback_score', models.BooleanField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workspace_chats', to=settings.AUTH_USER_MODEL)),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chats', to='coredb.workspace')),
            ],
            options={
                'db_table': 'workspace_chats',
            },
        ),
        migrations.CreateModel(
            name='WorkspaceDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc_id', models.CharField(max_length=255, unique=True)),
                ('filename', models.CharField(max_length=255)),
                ('docpath', models.CharField(max_length=500)),
                ('metadata', models.TextField(blank=True, null=True)),
                ('pinned', models.BooleanField(default=False)),
                ('watched', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='coredb.workspace')),
            ],
            options={
                'db_table': 'workspace_documents',
            },
        ),
        migrations.AddField(
            model_name='documentsyncqueue',
            name='workspace_doc',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sync_queue', to='coredb.workspacedocument'),
        ),
        migrations.CreateModel(
            name='WorkspaceSuggestedMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suggested_messages', to='coredb.workspace')),
            ],
            options={
                'db_table': 'workspace_suggested_messages',
            },
        ),
        migrations.CreateModel(
            name='WorkspaceThread',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='threads', to=settings.AUTH_USER_MODEL)),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='threads', to='coredb.workspace')),
            ],
            options={
                'db_table': 'workspace_threads',
            },
        ),
        migrations.CreateModel(
            name='WorkspaceParsedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=255, unique=True)),
                ('metadata', models.TextField(blank=True, null=True)),
                ('token_count_estimate', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workspace_parsed_files', to=settings.AUTH_USER_MODEL)),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parsed_files', to='coredb.workspace')),
                ('thread', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parsed_files', to='coredb.workspacethread')),
            ],
            options={
                'db_table': 'workspace_parsed_files',
            },
        ),
        migrations.CreateModel(
            name='WorkspaceUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workspace_users', to=settings.AUTH_USER_MODEL)),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workspace_users', to='coredb.workspace')),
            ],
            options={
                'db_table': 'workspace_users',
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['username'], name='users_usernam_baeb4b_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['role'], name='users_role_0ace22_idx'),
        ),
        migrations.AddIndex(
            model_name='apikey',
            index=models.Index(fields=['secret'], name='api_keys_secret_e76fde_idx'),
        ),
        migrations.AddIndex(
            model_name='apikey',
            index=models.Index(fields=['created_by'], name='api_keys_created_af7079_idx'),
        ),
        migrations.AddIndex(
            model_name='browserextensionapikey',
            index=models.Index(fields=['user'], name='browser_ext_user_id_a88789_idx'),
        ),
        migrations.AddIndex(
            model_name='browserextensionapikey',
            index=models.Index(fields=['key'], name='browser_ext_key_4a8c51_idx'),
        ),
        migrations.AddIndex(
            model_name='desktopmobiledevice',
            index=models.Index(fields=['user'], name='desktop_mob_user_id_91ffe2_idx'),
        ),
        migrations.AddIndex(
            model_name='desktopmobiledevice',
            index=models.Index(fields=['token'], name='desktop_mob_token_1e7bb2_idx'),
        ),
        migrations.AddIndex(
            model_name='documentsyncexecution',
            index=models.Index(fields=['queue'], name='document_sy_queue_i_500edb_idx'),
        ),
        migrations.AddIndex(
            model_name='documentsyncexecution',
            index=models.Index(fields=['status'], name='document_sy_status_9b4dfc_idx'),
        ),
        migrations.AddIndex(
            model_name='embedchat',
            index=models.Index(fields=['embed_config'], name='embed_chats_embed_c_a8a526_idx'),
        ),
        migrations.AddIndex(
            model_name='embedchat',
            index=models.Index(fields=['user'], name='embed_chats_user_id_4f3bd4_idx'),
        ),
        migrations.AddIndex(
            model_name='embedchat',
            index=models.Index(fields=['session_id'], name='embed_chats_session_4a0873_idx'),
        ),
        migrations.AddIndex(
            model_name='invite',
            index=models.Index(fields=['code'], name='invites_code_d6b44a_idx'),
        ),
        migrations.AddIndex(
            model_name='invite',
            index=models.Index(fields=['status'], name='invites_status_671bc3_idx'),
        ),
        migrations.AddIndex(
            model_name='invite',
            index=models.Index(fields=['created_by'], name='invites_created_191f92_idx'),
        ),
        migrations.AddIndex(
            model_name='passwordresettoken',
            index=models.Index(fields=['user'], name='password_re_user_id_af59e2_idx'),
        ),
        migrations.AddIndex(
            model_name='passwordresettoken',
            index=models.Index(fields=['token'], name='password_re_token_060a1f_idx'),
        ),
        migrations.AddIndex(
            model_name='recoverycode',
            index=models.Index(fields=['user'], name='recovery_co_user_id_4736d5_idx'),
        ),
        migrations.AddIndex(
            model_name='slashcommandpreset',
            index=models.Index(fields=['uid'], name='slash_comma_uid_0ebfaf_idx'),
        ),
        migrations.AddIndex(
            model_name='slashcommandpreset',
            index=models.Index(fields=['command'], name='slash_comma_command_d68b6c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='slashcommandpreset',
            unique_together={('uid', 'command')},
        ),
        migrations.AddIndex(
            model_name='systempromptvariable',
            index=models.Index(fields=['user'], name='system_prom_user_id_06ce1c_idx'),
        ),
        migrations.AddIndex(
            model_name='systempromptvariable',
            index=models.Index(fields=['key'], name='system_prom_key_326f1f_idx'),
        ),
        migrations.AddIndex(
            model_name='temporaryauthtoken',
            index=models.Index(fields=['token'], name='temporary_a_token_b1d644_idx'),
        ),
        migrations.AddIndex(
            model_name='temporaryauthtoken',
            index=models.Index(fields=['user'], name='temporary_a_user_id_30f4de_idx'),
        ),
        migrations.AddIndex(
            model_name='prompthistory',
            index=models.Index(fields=['workspace'], name='prompt_hist_workspa_a0b8e9_idx'),
        ),
        migrations.AddIndex(
            model_name='prompthistory',
            index=models.Index(fields=['modified_by'], name='prompt_hist_modifie_ef0f99_idx'),
        ),
        migrations.AddIndex(
            model_name='embedconfig',
            index=models.Index(fields=['uuid'], name='embed_confi_uuid_953749_idx'),
        ),
        migrations.AddIndex(
            model_name='embedconfig',
            index=models.Index(fields=['workspace'], name='embed_confi_workspa_aff2fb_idx'),
        ),
        migrations.AddIndex(
            model_name='embedconfig',
            index=models.Index(fields=['created_by'], name='embed_confi_created_b2921b_idx'),
        ),
        migrations.AddIndex(
            model_name='workspaceagentinvocation',
            index=models.Index(fields=['uuid'], name='workspace_a_uuid_bd1eb4_idx'),
        ),
        migrations.AddIndex(
            model_name='workspaceagentinvocation',
            index=models.Index(fields=['workspace'], name='workspace_a_workspa_4e1979_idx'),
        ),
        migrations.AddIndex(
            model_name='workspaceagentinvocation',
            index=models.Index(fields=['user'], name='workspace_a_user_id_d427b2_idx'),
        ),
        migrations.AddIndex(
            model_name='workspacechat',
            index=models.Index(fields=['workspace'], name='workspace_c_workspa_0e5d47_idx'),
        ),
        migrations.AddIndex(
            model_name='workspacechat',
            index=models.Index(fields=['user'], name='workspace_c_user_id_81c90d_idx'),
        ),
        migrations.AddIndex(
            model_name='workspacechat',
            index=models.Index(fields=['thread_id'], name='workspace_c_thread__f19e66_idx'),
        ),
        migrations.AddIndex(
            model_name='workspacechat',
            index=models.Index(fields=['api_session_id'], name='workspace_c_api_ses_a0d5ac_idx'),
        ),
        migrations.AddIndex(
            model_name='workspacedocument',
            index=models.Index(fields=['doc_id'], name='workspace_d_doc_id_14fb66_idx'),
        ),
        migrations.AddIndex(
            model_name='workspacedocument',
            index=models.Index(fields=['workspace'], name='workspace_d_workspa_eb8a3b_idx'),
        ),
        migrations.AddIndex(
            model_name='workspacedocument',
            index=models.Index(fields=['filename'], name='workspace_d_filenam_4ecaa8_idx'),
        ),
        migrations.AddIndex(
            model_name='documentsyncqueue',
            index=models.Index(fields=['next_sync_at'], name='document_sy_next_sy_b8fe38_idx'),
        ),
        migrations.AddIndex(
            model_name='documentsyncqueue',
            index=models.Index(fields=['workspace_doc'], name='document_sy_workspa_c18deb_idx'),
        ),
        migrations.AddIndex(
            model_name='workspacesuggestedmessage',
            index=models.Index(fields=['workspace'], name='workspace_s_workspa_c034b1_idx'),
        ),
        migrations.AddIndex(
            model_name='workspacethread',
            index=models.Index(fields=['workspace'], name='workspace_t_workspa_34a41a_idx'),
        ),
        migrations.AddIndex(
            model_name='workspacethread',
            index=models.Index(fields=['user'], name='workspace_t_user_id_e6d345_idx'),
        ),
        migrations.AddIndex(
            model_name='workspacethread',
            index=models.Index(fields=['slug'], name='workspace_t_slug_ebe152_idx'),
        ),
        migrations.AddIndex(
            model_name='workspaceparsedfile',
            index=models.Index(fields=['workspace'], name='workspace_p_workspa_e10408_idx'),
        ),
        migrations.AddIndex(
            model_name='workspaceparsedfile',
            index=models.Index(fields=['user'], name='workspace_p_user_id_6e5acb_idx'),
        ),
        migrations.AddIndex(
            model_name='workspaceparsedfile',
            index=models.Index(fields=['filename'], name='workspace_p_filenam_a71888_idx'),
        ),
        migrations.AddIndex(
            model_name='workspaceuser',
            index=models.Index(fields=['user'], name='workspace_u_user_id_222c3d_idx'),
        ),
        migrations.AddIndex(
            model_name='workspaceuser',
            index=models.Index(fields=['workspace'], name='workspace_u_workspa_e11f28_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='workspaceuser',
            unique_together={('user', 'workspace')},
        ),
    ]
